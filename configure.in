dnl Process this file with autoconf to produce a configure script.
AC_INIT([GLIDE],[0.2],[Magnus.Hagdorn@ed.ac.uk])
AM_INIT_AUTOMAKE
AC_PROG_RANLIB
AC_PROG_FC
AC_LANG_PUSH(Fortran)
AC_FC_SRCEXT(f90)
FCFLAGS="$FCFLAGS -fpp"
dnl Checking for python
AM_PATH_PYTHON([2.3],,[AC_MSG_RESULT(need at least python 2.3)])

# checking for latex and friends
AC_CHECK_PROGS(DVIPDFT,[dvipdfm])
AM_CONDITIONAL([DO_DOC_PDF], [test "$DVIPDFT" != ""])

# checking for BLAS library
AC_ARG_WITH(blas,AS_HELP_STRING([--with-blas],[how to link external BLAS library]),[ac_cv_blas=$withval])
ac_cv_haveblas=0
if test "$ac_cv_blas" != ""; then
  LIBS="$LIBS $ac_cv_blas"
  AC_MSG_CHECKING([for external BLAS lib])
  AC_LINK_IFELSE([AC_LANG_PROGRAM([],[f=ddot(1,1.,1.,1.,1.)])],ac_cv_haveblas=1,ac_cv_haveblas=0)
  if test "$ac_cv_haveblas" == 1; then
    AC_MSG_RESULT([yes])
  else
    AC_MSG_RESULT([no])
  fi
fi
AM_CONDITIONAL(EXT_BLAS,test "$ac_cv_haveblas" == 1)

# checking for netCDF
AC_ARG_WITH(netcdf,AS_HELP_STRING([--with-netcdf],[location where netCDF is installed]),[ac_cv_netcdf_prefix=$withval])
if test "$ac_cv_netcdf_prefix" != ""; then
  AC_MSG_RESULT(netCDF location: $ac_cv_netcdf_prefix)
  FCFLAGS="$FCFLAGS -I$ac_cv_netcdf_prefix/include"
  LDFLAGS="$LDFLAGS -L$ac_cv_netcdf_prefix/lib"
fi
AC_CHECK_LIB(netcdf,NF_INQ_LIBVERS)
AC_MSG_CHECKING([for f90 netCDF interface])
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([],[use netcdf])],AC_MSG_RESULT([yes]),AC_MSG_FAILURE([no]))
AC_LANG_POP(Fortran)

# some options
AC_ARG_ENABLE(profile, AS_HELP_STRING([--enable-profile],[Turn on profiling]),
AC_MSG_CHECKING([whether profilng is enabled])
[case "${enableval}" in
 yes)  FCFLAGS="$FCFLAGS -DPROFILING -pg"; AC_MSG_RESULT([yes]);;	
 no)   AC_MSG_RESULT([no]);;
 *) AC_MSG_ERROR(bad value ${enableval} for --enable-profile) ;;
esac],[profile=false])
AM_MAINTAINER_MODE

AC_CONFIG_FILES([Makefile doc/Makefile src/Makefile src/python/Makefile src/fortran/Makefile src/fortran/SLAP_library/Makefile])
AC_OUTPUT
